<?php

/**
 * @file
 * Contains community_notifier.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\comment\CommentInterface;
use Drupal\Component\Utility\Html;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function community_notifier_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the community_notifier module.
    case 'help.page.community_notifier':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('My Awesome Module') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function community_notifier_theme() {
  return [
    'community_notifier' => [
      'render element' => 'children',
    ],
  ];
}

function community_notifier_mail($key, &$message, $params){
  $options = array(
    'langcode' => $message['langcode'],
  );

  switch ($key){
    case 'node_update_alert':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('Ticket created: @title', array('@title' => $params['node_title']), $options);
      $message['body'][] = Html::escape($params['message']);
      break;
  }
}

function community_notifier_comment_update(CommentInterface $comment) {
  drupal_set_message($comment->getEntityTypeId().' by michael mwebaze');
}

function community_notifier_form_user_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $userFormObject = $form_state->getFormObject()->getEntity();
  $user = \Drupal\user\Entity\User::load($userFormObject->id());


  $form['terms_of_use'] = array(
    '#type' => 'checkbox',
    '#title' => t('I agree with the '.$user->getDisplayName().' website\'s terms and conditions.'),
    '#required' => TRUE,
  );
}